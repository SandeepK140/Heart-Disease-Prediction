# -*- coding: utf-8 -*-
"""HEART DISEASE PREDICTION.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eZG2znxLQhNiuSG_Rplg7rF0ofkk4Jll

Importing the dependecies
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data Preprocessing"""

#loading the data in to pandas dataframe
heart_data=pd.read_csv('/content/heart.csv')

#printing the first five rows of data
heart_data.head()

#last five rows of data
heart_data.tail()

#getting more information about data
heart_data.info()

#another way to check whether we have null values in our data
heart_data.isnull().sum()

#calculating statistical measures of the data
heart_data.describe()

#findind correlation between our features and target
heart_data.corr()

#now our main focus is on the target variale

"""if target-->1 defective heart
if target-->0 healthy heart
"""

#checkig the distribution of target value
heart_data['target'].value_counts()

"""Splitting the feature and target"""

x=heart_data.drop(columns='target',axis=1)#when you drop a column then axis is always 1 when row its 0
y=heart_data['target']

print(x)

print(y)

"""Splitting the data in to train data and test data

"""

X_train,X_test,Y_train,Y_test=train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)

print(x.shape,X_train.shape,X_test.shape)

"""Training our machine learning model

Logistic regression
"""

model=LogisticRegression()

#training the LogisticsRegression model with train data
model.fit(X_train,Y_train)

"""Model Evaluation

Accuracy score
"""

#accuracy on train data
X_train_prediction=model.predict(X_train)
training_data_accuracy=accuracy_score(X_train_prediction,Y_train)

print("Accuracy on Train data :",training_data_accuracy)

#accuracy on test data
X_test_prediction=model.predict(X_test)
test_data_accuracy=accuracy_score(X_test_prediction,Y_test)

print("Accuracy on Test data :",test_data_accuracy)

"""# Building a predictive system"""

input_data=(58,0,0,100,248,0,0,122,0,1,1,0,2)

#change the data in to numpy array
input_data_as_numpy_array=np.asarray(input_data)

#reshape the data array as we are predicting for only one instance
input_data_reshaped=input_data_as_numpy_array.reshape(1,-1)

prediction=model.predict(input_data_reshaped)
print(prediction)

if(prediction[0]==0):
    print("The person does not have a heart disease")
else:
    print("The person has a heart disease")

